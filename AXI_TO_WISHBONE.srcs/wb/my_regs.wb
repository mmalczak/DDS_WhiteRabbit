peripheral {
	name = "TEST_regs";
	description = "Set f registers used to test my AXI4-Lite to WB bridge";
	hdl_entity = "wb_test_slave";
	prefix = "wbt";

	reg {
		name = "LEDS register";
		description = "A register defining the state of the LEDs";
		prefix = "led";

		field {
			name = "LEDS";
			description = "Two first bits in this register define the states of LEDs";
			type = SLV;
			size = 2;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};


	reg {
		name = "PLL1_SYNCB register";
		description = "A register defining the state of the LEDs and the state of PLL1_SYNCB";
		prefix = "pll1_syncb";
		field {
			name = "PLL1_SYNCB";
			description = "Defines the state of PLL1_SYNCB";
			type = BIT;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "DDS register";
		description = "A register defining the frequency of DDS";
		prefix = "dds";
		field {
			name = "DDS";
			description = "Bits in this register define the frequency of DDS";
			type = SLV;
			size = 28;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};

	reg {
		name = "PLL frequency measurement register";
		description = "A register containing the value of PLL counts.";
		prefix = "pll_freq";

		field {
			name = "PLL freq";
			description = "Each bit in this register reflects the value of PLL counts.";
			type = SLV;
			size = 32;
			access_bus = READ_ONLY;			
			access_dev = WRITE_ONLY;
		};
	};

	reg {
		name = "DDS frequency measurement register";
		description = "A register containing the value of DDS counts.";
		prefix = "dds_freq";
		field {
			name = "DDS freq";
			description = "Each bit in this register reflects the value of DDS counts.";
			type = SLV;
			size = 32;
			access_bus = READ_ONLY;
			access_dev = WRITE_ONLY;
		};
	};

	reg {
		name = "COUNTER MASK register";
		description = "A register defining the mask for frequency measurement";
		prefix = "CNT_MASK";
		field {
			name = "CNT MASK";
			description = "Bits in this register define the mask for frequency measurement";
			type = SLV;
			size = 32;
			access_bus = READ_WRITE;
			access_dev = READ_ONLY;
		};
	};


};
